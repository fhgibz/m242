
C:\OrdnerFuerSachenWoImSharedFolderNichtGehen\laich\M242\m242\HelloWorld\Build\HelloWorld.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000256  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  00800100  00800100  000002ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000145c  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e2  00000000  00000000  0000187c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000781  00000000  00000000  0000225e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  000029e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000839  00000000  00000000  00002c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bc1  00000000  00000000  000034d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004096  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e5       	ldi	r30, 0x56	; 86
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 32       	cpi	r26, 0x23	; 35
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 29 01 	jmp	0x252	; 0x252 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include <inttypes.h>
#include <avr/interrupt.h>

int main(void)
{
	Usart_Init(250000);
  a6:	60 e9       	ldi	r22, 0x90	; 144
  a8:	70 ed       	ldi	r23, 0xD0	; 208
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	0e 94 79 00 	call	0xf2	; 0xf2 <Usart_Init>
	
	
	while (True)
	{

		Usart_Trace0(1);
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	0e 94 01 01 	call	0x202	; 0x202 <Usart_Trace0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	83 ed       	ldi	r24, 0xD3	; 211
  be:	90 e3       	ldi	r25, 0x30	; 48
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	80 40       	sbci	r24, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x1a>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x24>
  ca:	00 00       	nop
		_delay_ms(1000);
		return 0;
	}
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	08 95       	ret

000000d2 <EnterAtomic>:
  d2:	f8 94       	cli
  d4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_enterAtomicNesting>
  d8:	8f 5f       	subi	r24, 0xFF	; 255
  da:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_enterAtomicNesting>
  de:	08 95       	ret

000000e0 <LeaveAtomic>:
  e0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_enterAtomicNesting>
  e4:	81 50       	subi	r24, 0x01	; 1
  e6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_enterAtomicNesting>
  ea:	81 11       	cpse	r24, r1
  ec:	01 c0       	rjmp	.+2      	; 0xf0 <LeaveAtomic+0x10>
  ee:	78 94       	sei
  f0:	08 95       	ret

000000f2 <Usart_Init>:
  f2:	9b 01       	movw	r18, r22
  f4:	ac 01       	movw	r20, r24
  f6:	60 e4       	ldi	r22, 0x40	; 64
  f8:	72 e4       	ldi	r23, 0x42	; 66
  fa:	8f e0       	ldi	r24, 0x0F	; 15
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 07 01 	call	0x20e	; 0x20e <__udivmodsi4>
 102:	21 50       	subi	r18, 0x01	; 1
 104:	31 09       	sbc	r19, r1
 106:	e0 ec       	ldi	r30, 0xC0	; 192
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	35 83       	std	Z+5, r19	; 0x05
 10c:	24 83       	std	Z+4, r18	; 0x04
 10e:	88 e1       	ldi	r24, 0x18	; 24
 110:	81 83       	std	Z+1, r24	; 0x01
 112:	8e e0       	ldi	r24, 0x0E	; 14
 114:	82 83       	std	Z+2, r24	; 0x02
 116:	08 95       	ret

00000118 <Usart_PutChar>:
 118:	e0 ec       	ldi	r30, 0xC0	; 192
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	90 81       	ld	r25, Z
 11e:	95 ff       	sbrs	r25, 5
 120:	fd cf       	rjmp	.-6      	; 0x11c <Usart_PutChar+0x4>
 122:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 126:	08 95       	ret

00000128 <__vector_18>:
 128:	1f 92       	push	r1
 12a:	0f 92       	push	r0
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	0f 92       	push	r0
 130:	11 24       	eor	r1, r1
 132:	2f 93       	push	r18
 134:	8f 93       	push	r24
 136:	9f 93       	push	r25
 138:	af 93       	push	r26
 13a:	bf 93       	push	r27
 13c:	ef 93       	push	r30
 13e:	ff 93       	push	r31
 140:	e0 ec       	ldi	r30, 0xC0	; 192
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	19 c0       	rjmp	.+50     	; 0x178 <__vector_18+0x50>
 146:	26 81       	ldd	r18, Z+6	; 0x06
 148:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <USART_rxBufferIn>
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	8f 71       	andi	r24, 0x1F	; 31
 152:	90 78       	andi	r25, 0x80	; 128
 154:	99 23       	and	r25, r25
 156:	24 f4       	brge	.+8      	; 0x160 <__vector_18+0x38>
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	80 6e       	ori	r24, 0xE0	; 224
 15c:	9f 6f       	ori	r25, 0xFF	; 255
 15e:	01 96       	adiw	r24, 0x01	; 1
 160:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_end>
 164:	89 17       	cp	r24, r25
 166:	41 f0       	breq	.+16     	; 0x178 <__vector_18+0x50>
 168:	a0 91 01 01 	lds	r26, 0x0101	; 0x800101 <USART_rxBufferIn>
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	ad 5f       	subi	r26, 0xFD	; 253
 170:	be 4f       	sbci	r27, 0xFE	; 254
 172:	2c 93       	st	X, r18
 174:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <USART_rxBufferIn>
 178:	80 81       	ld	r24, Z
 17a:	88 23       	and	r24, r24
 17c:	24 f3       	brlt	.-56     	; 0x146 <__vector_18+0x1e>
 17e:	ff 91       	pop	r31
 180:	ef 91       	pop	r30
 182:	bf 91       	pop	r27
 184:	af 91       	pop	r26
 186:	9f 91       	pop	r25
 188:	8f 91       	pop	r24
 18a:	2f 91       	pop	r18
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <Usart_PutShort>:
 196:	cf 93       	push	r28
 198:	c8 2f       	mov	r28, r24
 19a:	89 2f       	mov	r24, r25
 19c:	0e 94 8c 00 	call	0x118	; 0x118 <Usart_PutChar>
 1a0:	8c 2f       	mov	r24, r28
 1a2:	0e 94 8c 00 	call	0x118	; 0x118 <Usart_PutChar>
 1a6:	cf 91       	pop	r28
 1a8:	08 95       	ret

000001aa <Usart_TraceN>:
 1aa:	ef 92       	push	r14
 1ac:	ff 92       	push	r15
 1ae:	0f 93       	push	r16
 1b0:	1f 93       	push	r17
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	ec 01       	movw	r28, r24
 1b8:	e6 2e       	mov	r14, r22
 1ba:	f7 2e       	mov	r15, r23
 1bc:	14 2f       	mov	r17, r20
 1be:	0e 94 69 00 	call	0xd2	; 0xd2 <EnterAtomic>
 1c2:	85 ea       	ldi	r24, 0xA5	; 165
 1c4:	0e 94 8c 00 	call	0x118	; 0x118 <Usart_PutChar>
 1c8:	81 2f       	mov	r24, r17
 1ca:	88 6a       	ori	r24, 0xA8	; 168
 1cc:	0e 94 8c 00 	call	0x118	; 0x118 <Usart_PutChar>
 1d0:	ce 01       	movw	r24, r28
 1d2:	0e 94 cb 00 	call	0x196	; 0x196 <Usart_PutShort>
 1d6:	cf ef       	ldi	r28, 0xFF	; 255
 1d8:	c1 0f       	add	r28, r17
 1da:	11 16       	cp	r1, r17
 1dc:	4c f4       	brge	.+18     	; 0x1f0 <Usart_TraceN+0x46>
 1de:	0e 2d       	mov	r16, r14
 1e0:	1f 2d       	mov	r17, r15
 1e2:	f8 01       	movw	r30, r16
 1e4:	81 91       	ld	r24, Z+
 1e6:	8f 01       	movw	r16, r30
 1e8:	0e 94 8c 00 	call	0x118	; 0x118 <Usart_PutChar>
 1ec:	c1 50       	subi	r28, 0x01	; 1
 1ee:	c8 f7       	brcc	.-14     	; 0x1e2 <Usart_TraceN+0x38>
 1f0:	0e 94 70 00 	call	0xe0	; 0xe0 <LeaveAtomic>
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	1f 91       	pop	r17
 1fa:	0f 91       	pop	r16
 1fc:	ff 90       	pop	r15
 1fe:	ef 90       	pop	r14
 200:	08 95       	ret

00000202 <Usart_Trace0>:
 202:	40 e0       	ldi	r20, 0x00	; 0
 204:	60 e0       	ldi	r22, 0x00	; 0
 206:	70 e0       	ldi	r23, 0x00	; 0
 208:	0e 94 d5 00 	call	0x1aa	; 0x1aa <Usart_TraceN>
 20c:	08 95       	ret

0000020e <__udivmodsi4>:
 20e:	a1 e2       	ldi	r26, 0x21	; 33
 210:	1a 2e       	mov	r1, r26
 212:	aa 1b       	sub	r26, r26
 214:	bb 1b       	sub	r27, r27
 216:	fd 01       	movw	r30, r26
 218:	0d c0       	rjmp	.+26     	; 0x234 <__udivmodsi4_ep>

0000021a <__udivmodsi4_loop>:
 21a:	aa 1f       	adc	r26, r26
 21c:	bb 1f       	adc	r27, r27
 21e:	ee 1f       	adc	r30, r30
 220:	ff 1f       	adc	r31, r31
 222:	a2 17       	cp	r26, r18
 224:	b3 07       	cpc	r27, r19
 226:	e4 07       	cpc	r30, r20
 228:	f5 07       	cpc	r31, r21
 22a:	20 f0       	brcs	.+8      	; 0x234 <__udivmodsi4_ep>
 22c:	a2 1b       	sub	r26, r18
 22e:	b3 0b       	sbc	r27, r19
 230:	e4 0b       	sbc	r30, r20
 232:	f5 0b       	sbc	r31, r21

00000234 <__udivmodsi4_ep>:
 234:	66 1f       	adc	r22, r22
 236:	77 1f       	adc	r23, r23
 238:	88 1f       	adc	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	1a 94       	dec	r1
 23e:	69 f7       	brne	.-38     	; 0x21a <__udivmodsi4_loop>
 240:	60 95       	com	r22
 242:	70 95       	com	r23
 244:	80 95       	com	r24
 246:	90 95       	com	r25
 248:	9b 01       	movw	r18, r22
 24a:	ac 01       	movw	r20, r24
 24c:	bd 01       	movw	r22, r26
 24e:	cf 01       	movw	r24, r30
 250:	08 95       	ret

00000252 <_exit>:
 252:	f8 94       	cli

00000254 <__stop_program>:
 254:	ff cf       	rjmp	.-2      	; 0x254 <__stop_program>
